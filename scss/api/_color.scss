@use '../internal/color' as *;
@use '../internal/output' as *;
@use '../helpers/color' as *;
@use 'setting' as *;
@use 'theme' as *;

$_default-shade: setting(fallbacks, colors);
$_default-accent: setting(fallbacks, accent);

@function fill(
  $name,
  $shade: $_default-shade,
  $alpha: 1,
  $saturation: null,
  $lightness: null,
  $complement: false,
  $invert: false
) {
  @if is-theme-color($name, $shade) or is-scheme-color($name, $shade) {
    @return hsl-color-var($name, $shade, $alpha, $saturation, $lightness, $complement, $invert);
  }
  @if is-theme-color($name) or is-scheme-color($name) {
    @return hsl-color-var(
      $name,
      $alpha: $alpha,
      $saturation: $saturation,
      $lightness: $lightness,
      $complement: $complement,
      $invert: $invert
    );
  } @else {
    @error "Color #{$name} or #{$name}-#{$shade} not found in theme.";
  }
}

// Return an RGB theme color value (compile time)
@function color($name, $shade: $_default-shade, $alpha: 1) {
  @if is-theme-color($name, $shade) {
    @return to-rgb(theme(colors, $name, $shade), $alpha);
  } @else if is-theme-color($name) {
    @return to-rgb(theme(colors, $name), $alpha);
  } @else {
    @error "Color #{$name} or #{$name}-#{$shade} not found in theme.";
  }
}

@function accent($shade: $-default-shade) {
  $fallback-accent: theme(colors, $-default-accent, $shade);
  @return css-var(accent-#{$shade}, $fallback-accent);
}
