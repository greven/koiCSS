// --------------------------------
//   Focus API
// --------------------------------

@use 'color' as *;
@use 'transition' as *;

// -------------------------------------
//   Functions
// -------------------------------------

// Get the value of the focus ring shadow
@function ring($color: accent(5), $width: 2px, $offset: 2px, $offset-color: fill(srf, 1), $inset: null) {
  @return $inset 0 0 0 $offset $offset-color, $inset 0 0 0 calc($width + $offset) $color;
}

// -------------------------------------
//   Mixins
// -------------------------------------

// Apply focus using outline
@mixin outline($color: accent(5), $width: 2px, $offset: 2px, $style: solid) {
  outline-color: $color;
  outline-offset: $offset;
  outline-style: $style;
  outline-width: $width;
}

@mixin ring($color: null, $width: null, $offset: null, $offset-color: null, $inset: null) {
  @if $color {
    --koi-ring-color: #{$color};
  }

  @if $width {
    --koi-ring-width: #{$width};
  }

  @if $offset {
    --koi-ring-offset: #{$offset};
  }

  @if $offset-color {
    --koi-ring-offset-color: #{$offset-color};
  }

  @if $inset {
    --koi-ring-inset: #{$inset};
  }

  --koi-ring-shadow: var(--koi-ring-inset) 0 0 0 calc(var(--koi-ring-width) + var(--koi-ring-offset))
    var(--koi-ring-color);

  --koi-ring-offset-shadow: var(--koi-ring-inset) 0 0 0 var(--koi-ring-offset) var(--koi-ring-offset-color);

  $shadow: var(--koi-ring-offset-shadow), var(--koi-ring-shadow), var(--koi-shadow);

  box-shadow: $shadow;
}
