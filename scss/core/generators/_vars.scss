// ------------------------------------
//   CSS Custom Props Generator (vars)
// ------------------------------------

@use 'sass:meta';
@use 'sass:string';

@use '../api/config' as *;
@use '../helpers' as *;

// Returns the css custom property name given the property and key
@function css-var-name($property, $key, $sufix: null) {
  $prefix: if(config(prefix) == '', '', '#{config(prefix)}-');
  $sufix: if($sufix, '-#{$sufix}', '');
  @return '--#{$prefix}#{$property}#{$sufix}-#{$key}';
}

// Generate CSS vars from map.
@mixin generate-css-vars($property, $map: ()) {
  :root {
    @each $key, $value in $map {
      $value: if(meta.type-of($value) == 'string', string.unquote($value), $value);
      #{css-var-name($property, $key)}: $value;
    }
  }
}

@mixin generate-css-color-vars($property, $colors-map: ()) {
  @each $color, $value in $colors-map {
    :root {
      @if meta.type-of($value) == color {
        #{css-var-name($property, $color)}: $value;
        #{css-var-name($property, $color, 'hsl')}: to-hsl($value);
      } @else {
        @each $shade, $shade-value in $value {
          #{css-var-name($property, '#{$color}-#{$shade}')}: $shade-value;
          #{css-var-name($property, '#{$color}-#{$shade}', 'hsl')}: to-hsl($shade-value);
        }
      }
    }
  }
}
