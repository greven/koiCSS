// --------------------------------
//   Typography
// --------------------------------

@use 'sass:list';

@use 'config' as *;
@use 'theme' as *;

// --------------------------------
//   Functions
// --------------------------------

@function font-family($font-family: config(fallbacks, font-family)) {
  @return theme(font-family, $font-family);
}

@function font-size($font-size: config(fallbacks, font-size)) {
  @return list.nth(theme(font-size, $font-size), 1);
}

@function font-weight($font-weight: config(fallbacks, font-weight)) {
  @return theme(font-weight, $font-weight);
}

// Get font-family, font-size or font-weight theme values
@function font($key) {
  @if theme-has-key(font-family, $key) {
    @return font-family($key);
  } @else if theme-has-key(font-size, $key) {
    @return font-size($key);
  } @else if theme-has-key(font-weight, $key) {
    @return font-weight($key);
  } @else {
    @error "[#{$key}] does not exist in the theme!";
  }
}

@function leading($leading: config(fallbacks, leading)) {
  @return theme(leading, $leading);
}

// Leading alias
@function line-height($leading: config(fallbacks, leading)) {
  @return theme(leading, $leading);
}

@function tracking($tracking: config(fallbacks, tracking)) {
  @return theme(tracking, $tracking);
}

// Tracking alias
@function letter-spacing($tracking: config(fallbacks, tracking)) {
  @return theme(tracking, $tracking);
}

// Font-size default leading (line-height)
@function text-leading($font-size) {
  @return list.nth(theme(font-size, $font-size), 2);
}

// --------------------------------
//   Mixins
// --------------------------------

// Font-size with default line-height
@mixin font-size($font-size: config(fallbacks, font-size)) {
  font-size: font-size($font-size);
}

// Font-size with default leading (line-height)
@mixin text-size($font-size: config(fallbacks, font-size)) {
  font-size: font-size($font-size);
  line-height: text-leading($font-size);
}
