// --------------------------------
//   Spacing
// --------------------------------

@use 'sass:map';
@use 'sass:list';

@use 'theme' as *;

// --------------------------------
//   Values
// --------------------------------

// Negative spacing (needed for negative margins)
$negative-spacing: () !default;
@each $key, $value in theme(spacing) {
  $map: ();
  $map: map.merge($map, (n#{$key}: -$value));
  $negative-spacing: map.merge($negative-spacing, $map);
}
@debug $negative-spacing;

// --------------------------------
//   Functions
// --------------------------------

/// Return a spacing value(s) from the theme
///
/// @param {string} $key - spacing key
/// @param {string} $keys - spacing keys
///
/// @return {any} `$spacing-value`.
///
@function spacing($key, $keys...) {
  $result: ();
  @if $key == 0 {
    $result: 0;
  } @else if theme-has-key(spacing, $key) {
    $result: theme(spacing, $key);
  } @else if map.has-key($negative-spacing, $key) {
    $result: map.get($negative-spacing, $key);
  } @else {
    @error "Key [#{$key}] is not a valid theme spacing.";
  }

  @each $key in $keys {
    @if $key == 0 {
      $value: 0;
      $result: list.append($result, $value);
    } @else if theme-has-key(spacing, $key) {
      $value: theme(spacing, $key);
      $result: list.append($result, $value);
    } @else if map.has-key($negative-spacing, $key) {
      $value: map.get($negative-spacing, $key);
      $result: list.append($result, $value);
    } @else {
      @error "Key(s) [#{$keys}] are not valid theme spacings.";
    }
  }

  @return $result;
}

// --------------------------------
//   Mixins
// --------------------------------

// Margin

@mixin margin($key, $keys...) {
  margin: spacing($key, $keys...);
}

@mixin margin-inline($key, $keys...) {
  margin-inline: spacing($key, $keys...);
}

@mixin margin-inline-start($key) {
  margin-inline-start: spacing($key);
}

@mixin margin-inline-end($key) {
  margin-inline-end: spacing($key);
}

@mixin margin-block($key, $keys...) {
  margin-block: spacing($key, $keys...);
}

@mixin margin-block-start($key) {
  margin-block-start: spacing($key);
}

@mixin margin-block-end($key) {
  margin-block-end: spacing($key);
}

@mixin margin-top($key) {
  margin: spacing($key);
}

@mixin margin-bottom($key) {
  margin-bottom: spacing($key);
}

@mixin margin-left($key) {
  margin-left: spacing($key);
}

@mixin margin-right($key) {
  margin-right: spacing($key);
}

// Padding

@mixin padding($key, $keys...) {
  padding: spacing($key, $keys...);
}

@mixin padding-inline($key, $keys...) {
  padding-inline: spacing($key, $keys...);
}

@mixin padding-inline-start($key) {
  padding-inline-start: spacing($key);
}

@mixin padding-inline-end($key) {
  padding-inline-end: spacing($key);
}

@mixin padding-block($key, $keys...) {
  padding-block: spacing($key, $keys...);
}

@mixin padding-block-start($key) {
  padding-block-start: spacing($key);
}

@mixin padding-block-end($key) {
  padding-block-end: spacing($key);
}

@mixin padding-top($key) {
  padding: spacing($key);
}

@mixin padding-bottom($key) {
  padding-bottom: spacing($key);
}

@mixin padding-left($key) {
  padding-left: spacing($key);
}

@mixin padding-right($key) {
  padding-right: spacing($key);
}
