// --------------------------------
//   Typography Styles
// --------------------------------

@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:string';
@use 'sass:selector';

@use '../config';
@use '../config/internal' as *;
@use '../internal' as *;
@use '../helpers' as *;
@use '../api' as *;

// --------------------------------
//   Vars
// --------------------------------

$_type-steps: map.keys(theme(font-size));
$_type-base-index: list.index($_type-steps, 'md');

// --------------------------------
//   Mixins
// --------------------------------

@mixin base {
  @if config.$use-hyphens {
    p,
    li,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      hyphens: auto;
      overflow-wrap: break-word;
    }
  }

  .prose {
    // @include text-size(config.$prose-min-body-font-size);
    font-size: fluid-font-size(config.$prose-body-min-font-size, config.$prose-body-max-font-size);

    @include prose(p) {
      margin-bottom: 1.25em;
      margin-top: 1.25em;
    }

    // Lead paragraphs, etc.
    @include prose('.lead') {
      font-size: fluid-font-size(config.$prose-lead-min-font-size, config.$prose-lead-max-font-size);
    }

    * {
      line-height: fluid-line-height(config.$prose-base-line-height-factor);
    }
  }
}

@mixin headings {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: fill(config.$headings-color);
    font-family: font(headings);
    font-weight: font-weight(config.$headings-font-weight);
  }

  h1,
  .h1 {
    @include text-size(5xl);
  }

  h2,
  .h2 {
    @include text-size(4xl);
  }

  h3,
  .h3 {
    @include text-size(3xl);
  }

  h4,
  .h4 {
    @include text-size(2xl);
  }

  h5,
  .h5 {
    @include text-size(xl);
  }

  h6,
  .h6 {
    @include text-size(lg);
  }

  .prose {
    @include prose('h1') {
      @include prose-heading($margin-top: false);
    }

    @include prose('h2, h3, h4, h5, h6') {
      @include prose-heading;
    }
  }
}

@mixin lists {
  .prose {
    ul,
    ol {
      margin: spacing(md, 0, md, md);
      padding-left: spacing(sm);

      li {
        list-style-position: inside;

        &::marker {
          color: accent(6);
        }
      }
    }
  }
}

// Add spacing to heading when inside a prose parent
@mixin prose-heading($margin-top: true) {
  /* stylelint-disable */

  @if $margin-top {
    margin-top: config.$prose-headings-margin-top;

    :where(& + *) {
      margin-top: 0 !important;
    }
  }

  line-height: fluid-line-height(config.$prose-headings-line-height-factor);
  margin-bottom: config.$prose-headings-margin-bottom;
  /* stylelint-enable */
}

@mixin prose($selector) {
  $ignore-prose-selector: ':not(:where([class~=' not-prose '] *))';

  #{selector.unify($selector, $ignore-prose-selector)} {
    @content;
  }
}

// --------------------------------
//   Generators
// --------------------------------

// Output font-sizes as CSS Custom properties
@mixin generate-font-sizes-css-vars($prefix) {
  /*! purgecss start ignore */
  @for $i from 1 through length($_type-steps) {
    $size: list.nth($_type-steps, $i);
    @include custom-prop($prefix, $size, font-size($size));
  }
  /*! purgecss end ignore */
}

// Output fluid font-sizes as CSS Custom properties
@mixin generate-fluid-font-sizes-css-vars($prefix) {
  /*! purgecss start ignore */
  @for $i from 1 through length($_type-steps) {
    $size: list.nth($_type-steps, $i);
    $min: config.$base-font-size * math.pow(config.$fluid-type-scale, $i - $_type-base-index);
    $max: config.$base-font-size * math.pow(config.$fluid-type-scale, $i - $_type-base-index + 1);

    @include custom-prop($prefix, $size, #{fluid-font-size($min, $max)});
  }
  /*! purgecss end ignore */
}

// --------------------------------
//   Styles
// --------------------------------

@mixin styles {
  @include base;
  @include headings;
  @include lists;
}

// --------------------------------
//   CSS Custom Properties
// --------------------------------

@mixin vars {
  // Font family
  @include generate-css-vars(theme(font-family), $font-family-prefix);

  // Font size
  @include generate-font-sizes-css-vars($font-size-prefix);

  // Fluid font size
  @include generate-fluid-font-sizes-css-vars($fluid-font-size-prefix);

  // Font weight
  @include generate-css-vars(theme(font-weight), $font-weight-prefix);

  // Leading
  @include generate-css-vars(theme(leading), $leading-prefix);

  // Tracking
  @include generate-css-vars(theme(tracking), $tracking-prefix);
}
