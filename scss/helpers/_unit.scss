// --------------------------------
//   Unit Helpers
// --------------------------------

@use 'sass:math';
@use 'sass:meta';

// --------------------------------
//   Vars
// --------------------------------

$_base-font-size: 16px;

// --------------------------------
//   Functions
// --------------------------------

/// Convert a value in pixels (px) to rem.
///
/// @param {number} $value-in-pixel -
///   The value to be converted to rem.
/// @param {integer} $base-font-size -
///   Optional base font size, defaults to 16.
///
/// @return {number} `$value-in-pixel` in rem.
///
@function rem($value-in-pixel, $base-font-size: $_base-font-size) {
  @if $value-in-pixel == null {
    @return null;
  }

  @return math.div(strip-unit($value-in-pixel), strip-unit($base-font-size)) * 1rem;
}

/// Convert a value in pixels (px) to em.
///
/// @param {number} $value-in-pixel -
///   The value to be converted to rem.
/// @param {integer} $base-font-size -
///   Base font size
///
/// @return {number} `$value-in-pixel` in em.
///
@function em($value-in-pixel, $base-font-size) {
  @return math.div(strip-unit($value-in-pixel), strip-unit($base-font-size)) * 1em;
}

/// Convert a value in rem to pixels (px).
///
/// @param {number} $value-in-rem -
///   The value to be converted to rem.
/// @param {integer} $base-font-size -
///   Optional base font size, defaults to 16.
///
/// @return {number} `$value-in-rem` in px.
///
@function rem-to-px($value-in-rem, $base-font-size: $_base-font-size) {
  @if $value-in-rem == null {
    @return null;
  }

  @return strip-unit($value-in-rem) * strip-unit($base-font-size) * 1px;
}

/// Strip unit from value.
///
/// @param {number}
///
/// @return {number (unitless)}
///
@function strip-unit($value) {
  @if meta.type-of($value) != 'number' {
    @error "Invalid `#{meta.type-of($value)}` type. Choose a number type instead.";
  } @else if meta.type-of($value) == 'number' and not math.is-unitless($value) {
    @return math.div($value, ($value * 0 + 1));
  }

  @return $value;
}

@function is-unit($value) {
  @return not math.is-unitless($value);
}
