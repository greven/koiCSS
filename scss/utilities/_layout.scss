// --------------------------------
//   Layout Utilities
// --------------------------------

@use 'sass:map';
@use 'sass:list';

@use '../tokens/spacing';
@use '../config';
@use '../api' as *;

// --------------------------------
//   Vars
// --------------------------------

$_aspect: map.merge(
  theme(aspect),
  (
    auto: auto,
    square: '1 / 1',
    video: '16 / 9',
  )
);

$_layers: theme(layer);
$_spacers: list.append(map.keys(spacing.$spacers), 0);

// --------------------------------
//   Utilities
// --------------------------------

$utilities: (
  aspect-ratio: (
    property: aspect-ratio,
    class: aspect,
    responsive: true,
    values: $_aspect,
  ),
  columns: (
    property: column-count,
    class: columns,
    responsive: true,
    values: 1 2 3 4 5 6 7 8 9 10 11 12,
  ),
  display: (
    property: display,
    class: null,
    responsive: true,
    values: (
      inline: inline,
      inline-block: inline-block,
      block: block,
      grid: grid,
      flex: flex,
      inline-flex: inline-flex,
      table: table,
      table-row: table-row,
      table-cell: table-cell,
      hidden: none,
    ),
  ),
  overflow: (
    property: overflow,
    class: overflow,
    responsive: true,
    values: auto hidden visible scroll,
  ),
  overflow-x: (
    property: overflow,
    class: overflow-x,
    responsive: true,
    values: auto hidden visible scroll,
  ),
  overflow-y: (
    property: overflow,
    class: overflow-y,
    responsive: true,
    values: auto hidden visible scroll,
  ),
  position: (
    property: position,
    class: null,
    responsive: true,
    values: static relative absolute fixed sticky,
  ),
  float: (
    property: float,
    class: float,
    responsive: true,
    values: left right none,
  ),
  clear: (
    property: clear,
    class: clear,
    responsive: true,
    values: left right both none,
  ),
  visibility: (
    property: visibility,
    class: null,
    responsive: true,
    values: (
      visible: visible,
      invisible: hidden,
    ),
  ),
  z-index: (
    property: z-index,
    class: layer,
    responsive: true,
    values: $_layers,
  ),
);

// --------------------------------
//   Utility Mixins
// --------------------------------

@mixin create-space-utility {
  @each $key in $_spacers {
    $spacer-value: if(theme-has-key(spacing, $key), spacing($key), $key);

    @include create-responsive-utility(space-x-#{$key}) {
      & > :not([hidden]) ~ :not([hidden]) {
        margin-right: calc($spacer-value * var(--koi-space-x-reverse, 0));
        margin-left: calc($spacer-value * calc(1 - var(--koi-space-x-reverse, 0)));
      }
    }

    @include create-responsive-utility(space-y-#{$key}) {
      & > :not([hidden]) ~ :not([hidden]) {
        margin-top: calc($spacer-value * calc(1 - var(--koi-space-y-reverse, 0)));
        margin-bottom: calc($spacer-value * var(--koi-space-y-reverse, 0));
      }
    }

    @include create-responsive-utility(-space-x-#{$key}) {
      & > :not([hidden]) ~ :not([hidden]) {
        margin-right: calc(-1 * $spacer-value * var(--koi-space-x-reverse, 0));
        margin-left: calc(-1 * $spacer-value * calc(1 - var(--koi-space-x-reverse, 0)));
      }
    }

    @include create-responsive-utility(-space-y-#{$key}) {
      & > :not([hidden]) ~ :not([hidden]) {
        margin-top: calc(-1 * $spacer-value * calc(1 - var(--koi-space-y-reverse, 0)));
        margin-bottom: calc(-1 * $spacer-value * var(--koi-space-y-reverse, 0));
      }
    }
  }

  @include create-responsive-utility(space-x-reverse) {
    --koi-space-x-reverse: 1;
  }

  @include create-responsive-utility(space-y-reverse) {
    --koi-space-y-reverse: 1;
  }
}

// --------------------------------

@mixin extensions {
  @include create-space-utility;

  @include create-utility(stack) {
    @include stack;
  }

  @include create-responsive-utility(container) {
    @include container(0px);
  }

  // Centered content using grid place-content
  @include create-responsive-utility(centered) {
    display: grid;
    place-content: center;
  }

  @include create-responsive-utility(sr-only) {
    @include visually-hidden;
  }

  @include create-responsive-utility(not-sr-only) {
    @include not-visually-hidden;
  }
}
